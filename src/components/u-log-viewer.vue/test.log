{
  mode: 'production',
  context: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue',
  devtool: 'source-map',
  externals: {
    vue: {
      root: 'Vue',
      commonjs: 'vue',
      commonjs2: 'vue',
      amd: 'vue'
    },
    'cloud-ui.kubevue': {
      root: 'CloudUI',
      commonjs: 'cloud-ui.kubevue',
      commonjs2: 'cloud-ui.kubevue',
      amd: 'cloud-ui.kubevue'
    }
  },
  node: {
    setImmediate: false,
    process: 'mock',
    dgram: 'empty',
    fs: 'empty',
    net: 'empty',
    tls: 'empty',
    child_process: 'empty'
  },
  output: {
    path: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue/dist-raw',
    filename: '[name].js',
    publicPath: '/',
    chunkFilename: '[name].[contenthash:8].js',
    library: 'ULogViewer',
    libraryTarget: 'umd',
    umdNamedDefine: true
  },
  resolve: {
    alias: {
      '@': '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue',
      vue$: 'vue/dist/vue.runtime.esm.js',
      '@@': '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cloud-ui.kubevue/src',
      library: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cloud-ui.kubevue/src',
      '~': '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue',
      baseCSS: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cloud-ui.kubevue/src/styles/base.css',
      themeCSS: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cloud-ui.kubevue/src/styles/theme.css',
      'cloud-ui': 'cloud-ui.kubevue/dist'
    },
    extensions: [
      '.mjs',
      '.js',
      '.jsx',
      '.vue',
      '.json',
      '.wasm'
    ],
    modules: [
      'kubevue_packages',
      'node_modules',
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue/node_modules',
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/@vue/cli-service/node_modules'
    ],
    plugins: [
      /* config.resolve.plugin('pnp') */
      {}
    ]
  },
  resolveLoader: {
    modules: [
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/@vue/cli-plugin-babel/node_modules',
      'node_modules',
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue/node_modules',
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/@vue/cli-service/node_modules',
      '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/node_modules'
    ],
    plugins: [
      /* config.resolve.plugin('pnp-loaders') */
      {}
    ]
  },
  module: {
    noParse: /^(vue|vue-router|vuex|vuex-router-sync)$/,
    rules: [
      /* config.module.rule('vue') */
      {
        test: function () { /* omitted long function */ },
        use: [
          /* config.module.rule('vue').use('cache-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cache-loader/dist/cjs.js',
            options: {
              cacheDirectory: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue/node_modules/.cache/vue-loader',
              cacheIdentifier: '0081327a'
            }
          },
          /* config.module.rule('vue').use('vue-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-loader/lib/index.js',
            options: {
              compilerOptions: {
                whitespace: 'condense'
              },
              cacheDirectory: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/src/components/u-log-viewer.vue/node_modules/.cache/vue-loader',
              cacheIdentifier: '0081327a'
            }
          },
          /* config.module.rule('vue').use('kubevue-loader') */
          {
            loader: 'kubevue-loader'
          }
        ]
      },
      /* config.module.rule('images') */
      {
        test: /\.(png|jpe?g|gif|webp)(\?.*)?$/,
        use: [
          /* config.module.rule('images').use('url-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 4096,
              fallback: {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/file-loader/dist/cjs.js',
                options: {
                  name: 'img/[hash:8]/[name].[ext]'
                }
              }
            }
          }
        ]
      },
      /* config.module.rule('svg') */
      {
        test: /\.(svg)(\?.*)?$/,
        use: [
          /* config.module.rule('svg').use('file-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/file-loader/dist/cjs.js',
            options: {
              name: 'img/[hash:8]/[name].[ext]'
            }
          }
        ]
      },
      /* config.module.rule('media') */
      {
        test: /\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/,
        use: [
          /* config.module.rule('media').use('url-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 4096,
              fallback: {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/file-loader/dist/cjs.js',
                options: {
                  name: 'media/[hash:8]/[name].[ext]'
                }
              }
            }
          }
        ]
      },
      /* config.module.rule('fonts') */
      {
        test: /\.(woff2?|eot|ttf|otf)(\?.*)?$/i,
        use: [
          /* config.module.rule('fonts').use('url-loader') */
          {
            loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/url-loader/dist/cjs.js',
            options: {
              limit: 4096,
              fallback: {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/file-loader/dist/cjs.js',
                options: {
                  name: 'fonts/[hash:8]/[name].[ext]'
                }
              }
            }
          }
        ]
      },
      /* config.module.rule('pug') */
      {
        test: /\.pug$/,
        oneOf: [
          /* config.module.rule('pug').oneOf('pug-vue') */
          {
            resourceQuery: /vue/,
            use: [
              /* config.module.rule('pug').oneOf('pug-vue').use('pug-plain-loader') */
              {
                loader: 'pug-plain-loader'
              }
            ]
          },
          /* config.module.rule('pug').oneOf('pug-template') */
          {
            use: [
              /* config.module.rule('pug').oneOf('pug-template').use('raw') */
              {
                loader: 'raw-loader'
              },
              /* config.module.rule('pug').oneOf('pug-template').use('pug-plain-loader') */
              {
                loader: 'pug-plain-loader'
              }
            ]
          }
        ]
      },
      /* config.module.rule('css') */
      {
        test: /\.css$/,
        oneOf: [
          /* config.module.rule('css').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('css').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('css').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('css').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('css').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('css').oneOf('vue-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('css').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('css').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('css').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('css').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('css').oneOf('vue').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('css').oneOf('vue').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('css').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('css').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('css').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('css').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('css').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('css').oneOf('normal-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('css').oneOf('variables') */
          {
            resourceQuery: /variables/,
            use: [
              /* config.module.rule('css').oneOf('variables').use('postcss-variables') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/postcss-variables.js'
              },
              /* config.module.rule('css').oneOf('variables').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  plugins: () => variablesPostcssPlugins
                }
              },
              /* config.module.rule('css').oneOf('variables').use('import-global-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/import-global-loader.js',
                options: {
                  theme: {
                    'default': '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/cloud-ui.kubevue/src/styles/theme.css'
                  }
                }
              }
            ]
          },
          /* config.module.rule('css').oneOf('normal') */
          {
            use: [
              /* config.module.rule('css').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('css').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('css').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('css').oneOf('normal').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('css').oneOf('normal').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('postcss') */
      {
        test: /\.p(ost)?css$/,
        oneOf: [
          /* config.module.rule('postcss').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('postcss').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('postcss').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  sourceMap: false,
                  importLoaders: 3,
                  modules: {
                    localIdentName: '[name]_[local]_[hash:base64:5]'
                  }
                }
              },
              /* config.module.rule('postcss').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('postcss').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              }
            ]
          },
          /* config.module.rule('postcss').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('postcss').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('postcss').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  sourceMap: false,
                  importLoaders: 3
                }
              },
              /* config.module.rule('postcss').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('postcss').oneOf('vue').use('postcss-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              }
            ]
          },
          /* config.module.rule('postcss').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('postcss').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('postcss').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  sourceMap: false,
                  importLoaders: 3,
                  modules: {
                    localIdentName: '[name]_[local]_[hash:base64:5]'
                  }
                }
              },
              /* config.module.rule('postcss').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('postcss').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              }
            ]
          },
          /* config.module.rule('postcss').oneOf('normal') */
          {
            use: [
              /* config.module.rule('postcss').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('postcss').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  sourceMap: false,
                  importLoaders: 3
                }
              },
              /* config.module.rule('postcss').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('postcss').oneOf('normal').use('postcss-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              }
            ]
          }
        ]
      },
      /* config.module.rule('scss') */
      {
        test: /\.scss$/,
        oneOf: [
          /* config.module.rule('scss').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('scss').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('scss').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('scss').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('scss').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('scss').oneOf('vue-modules').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('scss').oneOf('vue-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('scss').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('scss').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('scss').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('scss').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('scss').oneOf('vue').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('scss').oneOf('vue').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('scss').oneOf('vue').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('scss').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('scss').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('scss').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('scss').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('scss').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('scss').oneOf('normal-modules').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('scss').oneOf('normal-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('scss').oneOf('normal') */
          {
            use: [
              /* config.module.rule('scss').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('scss').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('scss').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('scss').oneOf('normal').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('scss').oneOf('normal').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('scss').oneOf('normal').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('sass') */
      {
        test: /\.sass$/,
        oneOf: [
          /* config.module.rule('sass').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('sass').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('sass').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('sass').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('sass').oneOf('vue-modules').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false,
                  sassOptions: {
                    indentedSyntax: true
                  }
                }
              },
              /* config.module.rule('sass').oneOf('vue-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('sass').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('sass').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('sass').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('sass').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('vue').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('sass').oneOf('vue').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false,
                  sassOptions: {
                    indentedSyntax: true
                  }
                }
              },
              /* config.module.rule('sass').oneOf('vue').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('sass').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('sass').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('sass').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('sass').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('sass').oneOf('normal-modules').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false,
                  sassOptions: {
                    indentedSyntax: true
                  }
                }
              },
              /* config.module.rule('sass').oneOf('normal-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('sass').oneOf('normal') */
          {
            use: [
              /* config.module.rule('sass').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('sass').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('sass').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('sass').oneOf('normal').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('sass').oneOf('normal').use('sass-loader') */
              {
                loader: 'sass-loader',
                options: {
                  sourceMap: false,
                  sassOptions: {
                    indentedSyntax: true
                  }
                }
              },
              /* config.module.rule('sass').oneOf('normal').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('less') */
      {
        test: /\.less$/,
        oneOf: [
          /* config.module.rule('less').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('less').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('less').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('less').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('less').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('less').oneOf('vue-modules').use('less-loader') */
              {
                loader: 'less-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('less').oneOf('vue-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('less').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('less').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('less').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('less').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('less').oneOf('vue').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('less').oneOf('vue').use('less-loader') */
              {
                loader: 'less-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('less').oneOf('vue').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('less').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('less').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('less').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('less').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('less').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('less').oneOf('normal-modules').use('less-loader') */
              {
                loader: 'less-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('less').oneOf('normal-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('less').oneOf('normal') */
          {
            use: [
              /* config.module.rule('less').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('less').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('less').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('less').oneOf('normal').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('less').oneOf('normal').use('less-loader') */
              {
                loader: 'less-loader',
                options: {
                  sourceMap: false
                }
              },
              /* config.module.rule('less').oneOf('normal').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          }
        ]
      },
      /* config.module.rule('stylus') */
      {
        test: /\.styl(us)?$/,
        oneOf: [
          /* config.module.rule('stylus').oneOf('vue-modules') */
          {
            resourceQuery: /module/,
            use: [
              /* config.module.rule('stylus').oneOf('vue-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('stylus').oneOf('vue-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('vue-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('vue-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('stylus').oneOf('vue-modules').use('stylus-loader') */
              {
                loader: 'stylus-loader',
                options: {
                  sourceMap: false,
                  preferPathResolver: 'webpack'
                }
              },
              /* config.module.rule('stylus').oneOf('vue-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('stylus').oneOf('vue') */
          {
            resourceQuery: /\?vue/,
            use: [
              /* config.module.rule('stylus').oneOf('vue').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('stylus').oneOf('vue').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('vue').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('vue').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('stylus').oneOf('vue').use('stylus-loader') */
              {
                loader: 'stylus-loader',
                options: {
                  sourceMap: false,
                  preferPathResolver: 'webpack'
                }
              },
              /* config.module.rule('stylus').oneOf('vue').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('stylus').oneOf('normal-modules') */
          {
            test: /\.module\.\w+$/,
            use: [
              /* config.module.rule('stylus').oneOf('normal-modules').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('stylus').oneOf('normal-modules').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined,
                  modules: {
                    getLocalIdent: function () { /* omitted long function */ },
                    localIdentName: '[name]_[local]_[hash:base64:8]'
                  }
                }
              },
              /* config.module.rule('stylus').oneOf('normal-modules').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('normal-modules').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('stylus').oneOf('normal-modules').use('stylus-loader') */
              {
                loader: 'stylus-loader',
                options: {
                  sourceMap: false,
                  preferPathResolver: 'webpack'
                }
              },
              /* config.module.rule('stylus').oneOf('normal-modules').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          },
          /* config.module.rule('stylus').oneOf('normal') */
          {
            use: [
              /* config.module.rule('stylus').oneOf('normal').use('vue-style-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-style-loader/index.js',
                options: {
                  sourceMap: false,
                  shadowMode: false
                }
              },
              /* config.module.rule('stylus').oneOf('normal').use('css-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/css-loader/dist/cjs.js',
                options: {
                  importLoaders: 2,
                  sourceMap: undefined
                }
              },
              /* config.module.rule('stylus').oneOf('normal').use('cssnano') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/postcss-loader/src/index.js',
                options: {
                  sourceMap: false,
                  plugins: [
                    function () { /* omitted long function */ }
                  ]
                }
              },
              /* config.module.rule('stylus').oneOf('normal').use('postcss-loader') */
              {
                loader: 'postcss-loader',
                options: {
                  sourceMap: undefined,
                  plugins: () => postcssPlugins
                }
              },
              /* config.module.rule('stylus').oneOf('normal').use('stylus-loader') */
              {
                loader: 'stylus-loader',
                options: {
                  sourceMap: false,
                  preferPathResolver: 'webpack'
                }
              },
              /* config.module.rule('stylus').oneOf('normal').use('module-class-priority-loader') */
              {
                loader: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/webpack/loaders/module-class-priority-loader/index.js'
              }
            ]
          }
        ]
      }
    ]
  },
  optimization: {
    splitChunks: {
      cacheGroups: {
        vendors: false,
        'default': false
      }
    },
    minimizer: [
      /* config.optimization.minimizer('terser') */
      new TerserPlugin(
        {
          terserOptions: {
            compress: {
              arrows: false,
              collapse_vars: false,
              comparisons: false,
              computed_props: false,
              hoist_funs: false,
              hoist_props: false,
              hoist_vars: false,
              inline: false,
              loops: false,
              negate_iife: false,
              properties: false,
              reduce_funcs: false,
              reduce_vars: false,
              switches: false,
              toplevel: false,
              typeofs: false,
              booleans: true,
              if_return: true,
              sequences: true,
              unused: true,
              conditionals: true,
              dead_code: true,
              evaluate: true
            },
            mangle: {
              safari10: true
            }
          },
          sourceMap: true,
          cache: true,
          parallel: true,
          extractComments: false
        }
      )
    ]
  },
  plugins: [
    /* config.plugin('vue-loader') */
    new VueLoaderPlugin(),
    /* config.plugin('define') */
    new DefinePlugin(
      {
        'process.env': {
          NODE_ENV: '"production"',
          BASE_URL: '"/"'
        }
      }
    ),
    /* config.plugin('friendly-errors') */
    new FriendlyErrorsWebpackPlugin(
      {
        additionalTransformers: [
          function () { /* omitted long function */ }
        ],
        additionalFormatters: [
          function () { /* omitted long function */ }
        ]
      }
    ),
    /* config.plugin('hash-module-ids') */
    new HashedModuleIdsPlugin(
      {
        hashDigest: 'hex'
      }
    ),
    /* config.plugin('named-chunks') */
    new NamedChunksPlugin(
      function () { /* omitted long function */ }
    ),
    /* config.plugin('html') */
    new HtmlWebpackPlugin(
      {
        title: false,
        templateParameters: function () { /* omitted long function */ },
        minify: {
          removeComments: true,
          collapseWhitespace: true,
          removeAttributeQuotes: true,
          collapseBooleanAttributes: true,
          removeScriptTypeAttributes: true
        },
        template: '/Users/kubevue/Projects/GitHub/KubevueUI/cloud-ui-materials/node_modules/vue-cli-plugin-kubevue/scenes/doc/views/demo.html',
        filename: 'demo.html',
        hash: true,
        inject: 'head'
      }
    ),
    /* config.plugin('preload') */
    new PreloadPlugin(
      {
        rel: 'preload',
        include: 'initial',
        fileBlacklist: [
          /\.map$/,
          /hot-update\.js$/
        ]
      }
    ),
    /* config.plugin('prefetch') */
    new PreloadPlugin(
      {
        rel: 'prefetch',
        include: 'asyncChunks'
      }
    )
  ],
  entry: {
    index: [
      './index.js'
    ]
  }
}